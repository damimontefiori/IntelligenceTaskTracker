@model int
@{
    var taskId = Model;
}

<div class="card">
    <div class="card-header d-flex justify-content-between align-items-center">
        <h5 class="mb-0">Resumen IA de la Tarea</h5>
        <button type="button" class="btn btn-sm btn-outline-primary refresh-insight-btn" data-task-id="@taskId">
            <span class="spinner-border spinner-border-sm d-none" role="status" aria-hidden="true"></span>
            Actualizar resumen
        </button>
    </div>
    <div class="card-body insight-content" data-task-id="@taskId">
        <div class="text-muted">Cargando resumen...</div>
    </div>
</div>

<script>
(function() {
    const taskId = @taskId;
    const refreshBtn = document.querySelector(`[data-task-id="${taskId}"].refresh-insight-btn`);
    const insightContent = document.querySelector(`[data-task-id="${taskId}"].insight-content`);
    const spinner = refreshBtn.querySelector('.spinner-border');
    
    async function loadInsight(refresh = false) {
        try {
            spinner.classList.remove('d-none');
            refreshBtn.disabled = true;
            
            const response = await fetch(`@Url.Action("GetInsight", "Tasks")?id=${taskId}&refresh=${refresh}`);
            const data = await response.json();
            
            if (data.error) {
                insightContent.innerHTML = `<div class="alert alert-warning">${data.error}</div>`;
            } else {
                let html = `
                    <div class="mb-3">
                        <strong>Resumen:</strong> ${data.summary || 'No disponible'}
                    </div>
                    <div class="mb-3">
                        <strong>Nivel de riesgo:</strong> 
                        <span class="badge ${data.riskLevel === 'high' ? 'bg-danger' : data.riskLevel === 'medium' ? 'bg-warning' : 'bg-success'}">${data.riskLevel}</span>
                    </div>`;
                
                if (data.alerts && data.alerts.length > 0) {
                    html += '<div class="mb-3"><strong>Alertas:</strong><br>';
                    data.alerts.forEach(alert => {
                        const badgeClass = alert.severity === 'high' ? 'bg-danger' : alert.severity === 'medium' ? 'bg-warning' : 'bg-info';
                        html += `<span class="badge ${badgeClass} me-1">${alert.message}</span>`;
                    });
                    html += '</div>';
                }
                
                if (data.nextActions && data.nextActions.length > 0) {
                    html += '<div><strong>Pr√≥ximos pasos:</strong><ul>';
                    data.nextActions.forEach(action => {
                        html += `<li>${action}</li>`;
                    });
                    html += '</ul></div>';
                }
                
                insightContent.innerHTML = html;
            }
        } catch (error) {
            insightContent.innerHTML = '<div class="alert alert-danger">Error cargando resumen IA</div>';
        } finally {
            spinner.classList.add('d-none');
            refreshBtn.disabled = false;
        }
    }
    
    refreshBtn.addEventListener('click', () => loadInsight(true));
    
    // Cargar insight inicial
    loadInsight(false);
})();
</script>
