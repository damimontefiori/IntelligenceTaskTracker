@model IntelligenceTaskTracker.Web.Models.TaskItem
@using IntelligenceTaskTracker.Web.Models
@{
    ViewData["Title"] = "Editar Tarea";
    var back = (ViewBag.ReturnUrl as string) ?? Context.Request.Query["returnUrl"].ToString();
}
<h2>Editar Tarea</h2>
<hr />
<form asp-action="Edit" method="post" class="mt-3">
    <input type="hidden" asp-for="Id" />
    @if (!string.IsNullOrWhiteSpace(back)) { <input type="hidden" name="returnUrl" value="@back" /> }
    <div class="mb-3">
        <label asp-for="Title" class="form-label"></label>
        <input asp-for="Title" class="form-control" />
        <span asp-validation-for="Title" class="text-danger"></span>
    </div>
    <div class="mb-3">
        <label asp-for="Description" class="form-label"></label>
        <textarea asp-for="Description" class="form-control" rows="3"></textarea>
        <span asp-validation-for="Description" class="text-danger"></span>
    </div>
    <div class="row">
        <div class="col-md-4 mb-3">
            <label asp-for="ResponsibleUserId" class="form-label">Responsable</label>
            <select asp-for="ResponsibleUserId" class="form-select" asp-items="ViewBag.Users">
                <option value="">-- Sin asignar --</option>
            </select>
            <span asp-validation-for="ResponsibleUserId" class="text-danger"></span>
        </div>
        <div class="col-md-4 mb-3">
            <label asp-for="Status" class="form-label">Estado</label>
            <select asp-for="Status" class="form-select" asp-items="ViewBag.Statuses"></select>
        </div>
        <div class="col-md-4 mb-3">
            <label asp-for="DueDate" class="form-label">Fecha límite</label>
            <input asp-for="DueDate" type="date" class="form-control" />
        </div>
    </div>

    <div class="mt-4">
        <h4>Comentarios (solo lectura)</h4>
        @if (Model.Comments == null || !Model.Comments.Any())
        {
            <div class="text-muted">Sin comentarios</div>
        }
        else
        {
            <ul class="list-group">
            @foreach (var c in Model.Comments)
            {
                <li class="list-group-item">
                    <div class="small text-muted">@c.CreatedAt.ToLocalTime().ToString("g") — @c.CreatedBy</div>
                    <div>@c.Comment</div>
                </li>
            }
            </ul>
        }
    </div>

    <button type="submit" class="btn btn-primary mt-3">Guardar</button>
    <a href="@(string.IsNullOrWhiteSpace(back) ? Url.Action("Index", "Tasks") : back)" class="btn btn-link mt-3">Cancelar</a>
</form>
@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
